version: "3.9"

services:
  api:
    build: .
    container_name: api
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres/compute_market
      - REDIS_BROKER_URL=redis://redis:6379/0
      - REDIS_BACKEND_URL=redis://redis:6379/1
    volumes:
      - .:/app
    dns:
      - 8.8.8.8



  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A workers.celery_worker worker --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres/compute_market
      - REDIS_BROKER_URL=redis://redis:6379/0
      - REDIS_BACKEND_URL=redis://redis:6379/1
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 8.8.8.8


  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: compute_market
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 15
      timeout: 5s

volumes:
  pgdata:
